rules:

  #######################################
  # EC2 Security Group Rules (7)
  #######################################
  - id: EC2-SG-001
    title: SSH open to world
    description: Security group allows SSH (port 22) from anywhere
    service: EC2
    condition: source == "AWS_EC2_SG" and event_type == "SECURITY_GROUP_RULE" and sg.cidr == "0.0.0.0/0" and sg.from_port == 22
    severity: CRITICAL
    remediation: "Restrict SSH access to specific IP ranges or use VPN/bastion host"

  - id: EC2-SG-002
    title: RDP open to world
    description: Security group allows RDP (port 3389) from anywhere
    service: EC2
    condition: source == "AWS_EC2_SG" and event_type == "SECURITY_GROUP_RULE" and sg.cidr == "0.0.0.0/0" and sg.from_port == 3389
    severity: CRITICAL
    remediation: "Restrict RDP access to specific IP ranges or use VPN"

  - id: EC2-SG-003
    title: All traffic allowed from anywhere
    description: Security group allows all protocols and ports from anywhere
    service: EC2
    condition: source == "AWS_EC2_SG" and event_type == "SECURITY_GROUP_RULE" and sg.cidr == "0.0.0.0/0" and sg.protocol == "-1"
    severity: CRITICAL
    remediation: "Apply least privilege principle - restrict to specific ports and protocols"

  - id: EC2-SG-004
    title: Database ports open to world
    description: Security group allows database ports from anywhere
    service: EC2
    condition: source == "AWS_EC2_SG" and event_type == "SECURITY_GROUP_RULE" and sg.cidr == "0.0.0.0/0" and sg.from_port in "3306,5432,1433,1521"
    severity: HIGH
    remediation: "Restrict database access to application servers only"

  - id: EC2-SG-005
    title: All ports open to world
    description: Security group allows all ports from anywhere
    service: EC2
    condition: source == "AWS_EC2_SG" and event_type == "SECURITY_GROUP_RULE" and sg.cidr == "0.0.0.0/0" and sg.from_port == 0 and sg.to_port == 65535
    severity: CRITICAL
    remediation: "Restrict to specific required ports only"

  - id: EC2-INST-001
    title: EC2 instance with public IP
    description: EC2 instance has a public IP address
    service: EC2
    condition: source == "AWS_EC2_INSTANCE" and event_type == "PUBLIC_IP"
    severity: MEDIUM
    remediation: "Use private subnets and load balancers instead of direct public IPs"

  - id: EC2-INST-002
    title: EC2 instance without IAM role
    description: EC2 instance has no IAM role attached
    service: EC2
    condition: source == "AWS_EC2_INSTANCE" and event_type == "NO_IAM_ROLE"
    severity: MEDIUM
    remediation: "Attach least-privilege IAM role to EC2 instance"

  #######################################
  # S3 Security Rules (6)
  #######################################
  - id: S3-ACL-001
    title: S3 bucket with public ACL
    description: S3 bucket has public ACL allowing global access
    service: S3
    condition: source == "AWS_S3_ACL" and event_type == "PUBLIC_ACCESS"
    severity: CRITICAL
    remediation: "Remove public ACL and enable public access block"

  - id: S3-POL-001
    title: S3 bucket with overly permissive policy
    description: S3 bucket policy allows access to all principals
    service: S3
    condition: source == "AWS_S3_POLICY" and event_type == "OVERLY_PERMISSIVE_POLICY"
    severity: CRITICAL
    remediation: "Restrict bucket policy to specific principals and actions"

  - id: S3-ENC-001
    title: S3 bucket without encryption
    description: S3 bucket has no encryption enabled
    service: S3
    condition: source == "AWS_S3_ENCRYPTION" and event_type == "NO_ENCRYPTION"
    severity: HIGH
    remediation: "Enable server-side encryption for the S3 bucket"

  - id: S3-PAB-001
    title: S3 bucket without public access block
    description: S3 bucket has no public access block configuration
    service: S3
    condition: source == "AWS_S3_PAB" and event_type == "NO_PUBLIC_ACCESS_BLOCK"
    severity: CRITICAL
    remediation: "Enable all public access block settings"

  - id: S3-PAB-002
    title: S3 bucket with weak public access block
    description: S3 bucket has weak public access block settings
    service: S3
    condition: source == "AWS_S3_PAB" and event_type == "WEAK_PUBLIC_ACCESS_BLOCK"
    severity: HIGH
    remediation: "Enable all public access block settings"

  - id: S3-POL-002
    title: S3 bucket allows dangerous actions
    description: S3 bucket policy allows dangerous actions to all principals
    service: S3
    condition: source == "AWS_S3_POLICY" and event_type == "DANGEROUS_POLICY_ACTION"
    severity: CRITICAL
    remediation: "Remove dangerous actions from bucket policy or restrict to specific principals"

  #######################################
  # IAM Security Rules (7)
  #######################################
  - id: IAM-USER-001
    title: IAM user with multiple access keys
    description: IAM user has more than one active access key
    service: IAM
    condition: source == "AWS_IAM_USER" and event_type == "MULTIPLE_ACCESS_KEYS"
    severity: MEDIUM
    remediation: "Remove unused access keys, keep only one active key per user"

  - id: IAM-USER-002
    title: IAM user with old access key
    description: IAM user has access key older than 90 days
    service: IAM
    condition: source == "AWS_IAM_USER" and event_type == "OLD_ACCESS_KEY"
    severity: HIGH
    remediation: "Rotate access keys regularly (every 90 days)"

  - id: IAM-USER-003
    title: IAM user without MFA
    description: IAM user has no MFA device configured
    service: IAM
    condition: source == "AWS_IAM_USER" and event_type == "NO_MFA"
    severity: HIGH
    remediation: "Enable MFA for all IAM users"

  - id: IAM-USER-004
    title: IAM user with inline policies
    description: IAM user has inline policies attached
    service: IAM
    condition: source == "AWS_IAM_USER" and event_type == "INLINE_POLICIES"
    severity: MEDIUM
    remediation: "Use managed policies instead of inline policies for better management"

  - id: IAM-ROLE-001
    title: IAM role with admin access
    description: IAM role has AdministratorAccess policy attached
    service: IAM
    condition: source == "AWS_IAM_ROLE" and event_type == "ADMIN_ACCESS"
    severity: CRITICAL
    remediation: "Apply least privilege principle - use specific policies instead of admin access"

  - id: IAM-ROLE-002
    title: IAM role with overly permissive trust policy
    description: IAM role trust policy allows any AWS principal
    service: IAM
    condition: source == "AWS_IAM_ROLE" and event_type == "OVERLY_PERMISSIVE_TRUST"
    severity: CRITICAL
    remediation: "Restrict trust policy to specific principals and accounts"

  - id: IAM-ACCOUNT-001
    title: Weak password policy
    description: Account has weak password policy (less than 8 characters)
    service: IAM
    condition: source == "AWS_IAM_ACCOUNT" and event_type == "WEAK_PASSWORD_POLICY"
    severity: HIGH
    remediation: "Enforce stronger password policy with minimum 8 characters"

  #######################################
  # CloudTrail Security Rules (4)
  #######################################
  - id: CT-ROOT-001
    title: Root account usage detected
    description: Root account was used for API calls or console login
    service: CloudTrail
    condition: source == "AWS_CLOUDTRAIL" and event_type == "ROOT_ACCOUNT_USAGE"
    severity: CRITICAL
    remediation: "Disable root account access keys and use IAM users/roles"

  - id: CT-HIGH-001
    title: High-risk action detected
    description: High-risk action detected in CloudTrail logs
    service: CloudTrail
    condition: source == "AWS_CLOUDTRAIL" and event_type == "HIGH_RISK_ACTION"
    severity: CRITICAL
    remediation: "Review and validate high-risk actions, implement approval workflows"

  - id: CT-MFA-001
    title: Console login without MFA
    description: Console login detected without MFA authentication
    service: CloudTrail
    condition: source == "AWS_CLOUDTRAIL" and event_type == "CONSOLE_LOGIN_NO_MFA"
    severity: HIGH
    remediation: "Enforce MFA for all console logins"

  - id: CT-ACTION-001
    title: Privilege escalation action
    description: Action that could lead to privilege escalation detected
    service: CloudTrail
    condition: source == "AWS_CLOUDTRAIL" and event_type == "HIGH_RISK_ACTION" and event.action in "CreateAccessKey,AttachUserPolicy,PutUserPolicy,AssumeRole"
    severity: HIGH
    remediation: "Monitor and validate privilege escalation actions"

  #######################################
  # GuardDuty Security Rules (5)
  #######################################
  - id: GD-CRIT-001
    title: Critical GuardDuty finding
    description: GuardDuty detected critical security threat
    service: GuardDuty
    condition: source == "AWS_GUARDDUTY" and event_type == "THREAT_DETECTION" and guardduty.severity_score >= 8.0
    severity: CRITICAL
    remediation: "Immediately investigate and remediate the threat"

  - id: GD-HIGH-001
    title: High severity GuardDuty finding
    description: GuardDuty detected high severity security threat
    service: GuardDuty
    condition: source == "AWS_GUARDDUTY" and event_type == "THREAT_DETECTION" and guardduty.severity_score >= 6.0 and guardduty.severity_score < 8.0
    severity: HIGH
    remediation: "Investigate and remediate the security threat"

  - id: GD-MED-001
    title: Medium severity GuardDuty finding
    description: GuardDuty detected medium severity security threat
    service: GuardDuty
    condition: source == "AWS_GUARDDUTY" and event_type == "THREAT_DETECTION" and guardduty.severity_score >= 4.0 and guardduty.severity_score < 6.0
    severity: MEDIUM
    remediation: "Review and address the security finding"

  - id: GD-CRYPTO-001
    title: Cryptocurrency mining detected
    description: GuardDuty detected cryptocurrency mining activity
    service: GuardDuty
    condition: source == "AWS_GUARDDUTY" and event_type == "THREAT_DETECTION" and guardduty.finding_type.contains("CryptoCurrency")
    severity: CRITICAL
    remediation: "Isolate affected instances and investigate compromise"

  - id: GD-UNAUTH-001
    title: Unauthorized access detected
    description: GuardDuty detected unauthorized access
    service: GuardDuty
    condition: source == "AWS_GUARDDUTY" and event_type == "THREAT_DETECTION" and guardduty.finding_type.contains("UnauthorizedAccess")
    severity: CRITICAL
    remediation: "Immediately revoke access and investigate breach"

  #######################################
  # Collection Error Rules (1)
  #######################################
  - id: COLLECT-001
    title: AWS collection error
    description: Error occurred during AWS data collection
    service: COLLECTION
    condition: event_type == "COLLECTION_ERROR"
    severity: CRITICAL
    remediation: "Check AWS credentials and permissions, review error logs"

  #######################################
  # Azure Storage Account Rules (8)
  #######################################
  - id: AZURE-STORAGE-001
    title: Azure Storage HTTP allowed
    description: Storage account allows HTTP traffic
    service: AZURE_STORAGE
    condition: source == "AZURE_STORAGE" and event_type == "HTTP_ALLOWED"
    severity: HIGH
    remediation: "Enable HTTPS-only traffic for storage accounts"

  - id: AZURE-STORAGE-002
    title: Azure Storage no encryption
    description: Storage account has no encryption enabled
    service: AZURE_STORAGE
    condition: source == "AZURE_STORAGE" and event_type == "NO_ENCRYPTION"
    severity: HIGH
    remediation: "Enable encryption for storage accounts"

  - id: AZURE-STORAGE-003
    title: Azure Storage public access
    description: Storage account has public access enabled
    service: AZURE_STORAGE
    condition: source == "AZURE_STORAGE" and event_type == "PUBLIC_ACCESS"
    severity: CRITICAL
    remediation: "Disable public access and use private endpoints"

  - id: AZURE-STORAGE-004
    title: Azure Storage no versioning
    description: Storage account has versioning disabled
    service: AZURE_STORAGE
    condition: source == "AZURE_STORAGE" and event_type == "VERSIONING_DISABLED"
    severity: MEDIUM
    remediation: "Enable versioning for data protection"

  #######################################
  # Azure Virtual Machine Rules (6)
  #######################################
  - id: AZURE-VM-001
    title: Azure VM no disk encryption
    description: Virtual machine has no disk encryption
    service: AZURE_VM
    condition: source == "AZURE_VM" and event_type == "NO_DISK_ENCRYPTION"
    severity: HIGH
    remediation: "Enable disk encryption for virtual machines"

  - id: AZURE-VM-002
    title: Azure VM external IP
    description: Virtual machine has external IP address
    service: AZURE_VM
    condition: source == "AZURE_VM" and event_type == "EXTERNAL_IP"
    severity: MEDIUM
    remediation: "Use private IPs and load balancers instead of external IPs"

  - id: AZURE-VM-003
    title: Azure VM no network security group
    description: Virtual machine has no network security group
    service: AZURE_VM
    condition: source == "AZURE_VM" and event_type == "NO_NSG"
    severity: HIGH
    remediation: "Associate network security groups with virtual machines"

  #######################################
  # Azure Key Vault Rules (4)
  #######################################
  - id: AZURE-KV-001
    title: Azure Key Vault soft delete disabled
    description: Key Vault has soft delete disabled
    service: AZURE_KEYVAULT
    condition: source == "AZURE_KEYVAULT" and event_type == "SOFT_DELETE_DISABLED"
    severity: HIGH
    remediation: "Enable soft delete for Key Vault"

  - id: AZURE-KV-002
    title: Azure Key Vault purge protection disabled
    description: Key Vault has purge protection disabled
    service: AZURE_KEYVAULT
    condition: source == "AZURE_KEYVAULT" and event_type == "PURGE_PROTECTION_DISABLED"
    severity: MEDIUM
    remediation: "Enable purge protection for Key Vault"

  #######################################
  # Azure Security Center Rules (3)
  #######################################
  - id: AZURE-SCC-001
    title: Azure Security Center critical finding
    description: Security Center detected critical security issue
    service: AZURE_SECURITY_CENTER
    condition: source == "AZURE_SECURITY_CENTER" and event_type == "SECURITY_RECOMMENDATION" and security_center.severity == "Critical"
    severity: CRITICAL
    remediation: "Address Security Center critical recommendations immediately"

  - id: AZURE-SCC-002
    title: Azure Security Center high finding
    description: Security Center detected high severity security issue
    service: AZURE_SECURITY_CENTER
    condition: source == "AZURE_SECURITY_CENTER" and event_type == "SECURITY_RECOMMENDATION" and security_center.severity == "High"
    severity: HIGH
    remediation: "Review and address Security Center high priority recommendations"

  #######################################
  # GCP IAM Rules (6)
  #######################################
  - id: GCP-IAM-001
    title: GCP service account keys
    description: Service account has access keys (should use workload identity)
    service: GCP_IAM
    condition: source == "GCP_IAM_SA" and event_type == "SERVICE_ACCOUNT_KEYS"
    severity: HIGH
    remediation: "Use workload identity instead of service account keys"

  - id: GCP-IAM-002
    title: GCP overly permissive role
    description: IAM policy has overly permissive role
    service: GCP_IAM
    condition: source == "GCP_IAM_POLICY" and event_type == "OVERLY_PERMISSIVE_ROLE"
    severity: CRITICAL
    remediation: "Apply principle of least privilege to IAM roles"

  - id: GCP-IAM-003
    title: GCP no MFA enforcement
    description: No MFA enforcement for IAM users
    service: GCP_IAM
    condition: source == "GCP_IAM" and event_type == "NO_MFA_ENFORCEMENT"
    severity: HIGH
    remediation: "Enable MFA enforcement for IAM users"

  #######################################
  # GCP Cloud Storage Rules (5)
  #######################################
  - id: GCP-STORAGE-001
    title: GCP bucket public access
    description: Cloud Storage bucket has public access
    service: GCP_STORAGE
    condition: source == "GCP_STORAGE_BUCKET" and event_type == "PUBLIC_ACCESS"
    severity: CRITICAL
    remediation: "Remove public access from Cloud Storage buckets"

  - id: GCP-STORAGE-002
    title: GCP bucket no encryption
    description: Cloud Storage bucket has no encryption
    service: GCP_STORAGE
    condition: source == "GCP_STORAGE_BUCKET" and event_type == "NO_ENCRYPTION"
    severity: HIGH
    remediation: "Enable encryption for Cloud Storage buckets"

  - id: GCP-STORAGE-003
    title: GCP bucket no versioning
    description: Cloud Storage bucket has versioning disabled
    service: GCP_STORAGE
    condition: source == "GCP_STORAGE_BUCKET" and event_type == "VERSIONING_DISABLED"
    severity: MEDIUM
    remediation: "Enable versioning for data protection"

  #######################################
  # GCP Compute Engine Rules (4)
  #######################################
  - id: GCP-COMPUTE-001
    title: GCP instance external IP
    description: Compute Engine instance has external IP
    service: GCP_COMPUTE
    condition: source == "GCP_COMPUTE_INSTANCE" and event_type == "EXTERNAL_IP"
    severity: MEDIUM
    remediation: "Use private IPs and load balancers instead of external IPs"

  - id: GCP-COMPUTE-002
    title: GCP instance no disk encryption
    description: Compute Engine instance has no disk encryption
    service: GCP_COMPUTE
    condition: source == "GCP_COMPUTE_INSTANCE" and event_type == "NO_DISK_ENCRYPTION"
    severity: HIGH
    remediation: "Enable disk encryption for Compute Engine instances"

  - id: GCP-COMPUTE-003
    title: GCP instance no firewall rules
    description: Compute Engine instance has no firewall rules
    service: GCP_COMPUTE
    condition: source == "GCP_COMPUTE_INSTANCE" and event_type == "NO_FIREWALL_RULES"
    severity: HIGH
    remediation: "Configure firewall rules for Compute Engine instances"

  #######################################
  # GCP Security Command Center Rules (3)
  #######################################
  - id: GCP-SCC-001
    title: GCP Security Command Center critical finding
    description: Security Command Center detected critical security issue
    service: GCP_SCC
    condition: source == "GCP_SCC" and event_type == "SECURITY_FINDING" and scc_finding.severity == "CRITICAL"
    severity: CRITICAL
    remediation: "Address Security Command Center critical findings immediately"

  - id: GCP-SCC-002
    title: GCP Security Command Center high finding
    description: Security Command Center detected high severity security issue
    service: GCP_SCC
    condition: source == "GCP_SCC" and event_type == "SECURITY_FINDING" and scc_finding.severity == "HIGH"
    severity: HIGH
    remediation: "Review and address Security Command Center high priority findings"

  #######################################
  # GCP Asset Inventory Rules (2)
  #######################################
  - id: GCP-ASSET-001
    title: GCP asset no labels
    description: Cloud Asset has no labels for organization
    service: GCP_ASSET_INVENTORY
    condition: source == "GCP_ASSET_INVENTORY" and event_type == "NO_LABELS"
    severity: LOW
    remediation: "Add labels to Cloud Assets for better organization and governance"

  #######################################
  # Multi-Cloud Collection Error Rules (3)
  #######################################
  - id: COLLECT-002
    title: Azure collection error
    description: Error occurred during Azure data collection
    service: COLLECTION
    condition: source == "AZURE_STORAGE" and event_type == "COLLECTION_ERROR"
    severity: CRITICAL
    remediation: "Check Azure credentials and permissions, review error logs"

  - id: COLLECT-003
    title: GCP collection error
    description: Error occurred during GCP data collection
    service: COLLECTION
    condition: source == "GCP_STORAGE" and event_type == "COLLECTION_ERROR"
    severity: CRITICAL
    remediation: "Check GCP credentials and permissions, review error logs"